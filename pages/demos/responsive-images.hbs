---
title: Demo - Responsive Images
layout: responsive-images-demo
---

{{> topbar }}

<section class="basic_text_wrapper--demo-header">
    <div class="basic_text_wrapper--demo-header--text">
        <h1>Demo: Responsive Images</h1>
        <p>Stepping through ideas for the implementation of a picture element. Inspired by <a href="https://alistapart.com/article/responsive-images-in-practice/">this A List Apart post</a> and my own later (but now also old) <a href="https://namingthingsishard.blog/node/69">follow-up blog post</a>. In the course of working on this, <a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images">this MDN page</a> came in handy as a clarifying agent.</p>
    </div>
</section>

{{!-- Step 1 --}}

<section class="basic_text_wrapper--demo-text">
    <h2>Step 1: Start with something simple but fairly useful</h2>
    <p>We have some text with a max-width on it; we have an figure/image combo that starts off as a centered block element. Then we float it into the text when there's enough space to support it. Fairly basic responsive effect.</p>
</section>

<section class="code-wrapper">
    <p>Here's the HTML code.</p>

    <code><pre>
&lt;figure class="picture_element_demo__image--float-right"&gt;
    &lt;img class=""
         src="https://via.placeholder.com/300x300"
         alt=""&gt;
    &lt;figcaption&gt;Our cool responsive image that sometimes floats.&lt;/figcaption&gt;
&lt;/figure&gt;
    </pre></code>

    <p>And a touch of sass:</p>
    <code>
        <pre>
.picture_element_demo__image--float-right {
  margin: auto;
  max-width: 300px;

  @media screen and (min-width: 762px) {
    float: right;
    margin: 0 0 1rem 1rem;
  }
}
        </pre>
    </code>
</section>

<section class="picture_element_demo">
    <div class="picture_element_demo__text-column">
        <p>Architecto ex dolorum vel et et porro non. Placeat libero reiciendis consequatur et. Quis illo eos saepe quaerat. Eligendi perferendis itaque cupiditate soluta repellat ut voluptatem qui.</p>

        <figure class="picture_element_demo__image--float-right">
            <img class=""
                 src="https://via.placeholder.com/300x300"
                 alt="">
            <figcaption>Our cool responsive image that sometimes floats.</figcaption>
        </figure>

        <p>Similique est iste incidunt labore sit. Sit reprehenderit qui qui consectetur deserunt autem. Rerum in eum consequatur placeat reiciendis. Deleniti laboriosam rem aut voluptas omnis repellat dolor inventore. Sed quaerat consequatur consequatur quas illo vel.p Ut ex voluptates non architecto.</p>

        <p>Omnis pariatur explicabo aut odit. Eos ea a praesentium culpa nihil doloremque voluptas. Nobis sint autem suscipit vel temporibus maxime. Temporibus sunt officiis eius. Labore odio dolores debitis repellat nihil. Molestias voluptatem qui cupiditate itaque quiap rem id.</p>

        <p>Non praesentium aspernatur voluptas ut. Cumque voluptatum eveniet repellat ullam saepe sed sit. Ipsa magni labore expedita ab et voluptatem officiis. Ad deleniti quo natus voluptatem. Quam error nulla ut sed ducimus nihil iure perspiciatis. Necessitatibusp itaque fuga nihil alias distinctio beatae perferendis.</p>

        <p>Doloribus officia repudiandae corporis odit aut. Ut adipisci vero ea facilis ipsam et ut. Odio voluptas quia voluptate ea consequatur voluptatem commodi. Non omnis eum numquam distinctio commodi illo.</p>
    </div>
</section>



{{!-- Step 2 --}}

<section class="basic_text_wrapper--demo-text">
    <h2>Step 2: Now add srcset and sizes to the img element</h2>
    <p>What we want to do is get some idea of what the browsers loads and if in fact various versions of the image are in fact loaded. Also we want to make sure that what we've done so far actually works in this context.</p>
    <p>This is something you kind of have to mess around with to get an idea of what's happening. As the List Apart article mentions, it's also not something we want to be too picky about at this point. We're mostly interested in helping the browser understand what version of the image it should go get based on the factors its aware of that we either aren't (bandwidth, supposedly) or shouldn't care about (screen size).</p>
    <p>Also worth noting, as noted in the List Apart article re: ems in the sizes calc statement: rem, too, seems to fall back to a browser-standard 16 px, so I wasn't quite seeing the results I was expecting, when I originally plugged in <code>(100vw - 4rem)</code>. So I had to scale up my 4rem to match the 20px rem I set in the stylesheet (20px = 16px * 1.25; 4rem * 1.25 = 5rem).</p>
    <p>This stage, ultimately, is about asset management, nothing more. We're not into art direction yet.</p>
</section>

<section class="code-wrapper">
    <p>Here's the HTML code.</p>

    <code><pre>
&lt;figure class="picture_element_demo__image--float-right"&gt;
    &lt;img class=""
         srcset="https://via.placeholder.com/900x900?text=Not+Even+Real+(900x900) 900w,
                 https://via.placeholder.com/600x600?text=Giant+(600x600) 600w,
                 https://via.placeholder.com/450x450?text=Middle+(450x450) 450w,
                 https://via.placeholder.com/300x300?text=Small+(300x300) 300w,
                 https://via.placeholder.com/150x150?text=Tiny+Tiny+(150x150) 150w"
         sizes="(max-width: 380px) calc(100vw - 5rem),
                 300px"
         src="https://via.placeholder.com/300x300"
         alt=""&gt;
    &lt;figcaption&gt;Our cool responsive image that sometimes floats and which now includes srcset and sizes attributes, to help the browser download the most sensible version of the image it can.&lt;/figcaption&gt;
&lt;/figure&gt;
    </pre></code>

    <p>And a touch of sass:</p>
    <code>
        <pre>
.picture_element_demo__image--float-right {
  margin: auto;
  max-width: 300px;

  @media screen and (min-width: 762px) {
    float: right;
    margin: 0 0 1rem 1rem;
  }
}
        </pre>
    </code>
</section>

<section class="picture_element_demo">
    <div class="picture_element_demo__text-column">
        <p>Architecto ex dolorum vel et et porro non. Placeat libero reiciendis consequatur et. Quis illo eos saepe quaerat. Eligendi perferendis itaque cupiditate soluta repellat ut voluptatem qui.</p>

        <figure class="picture_element_demo__image--float-right">
            <img class=""
                 srcset="https://via.placeholder.com/900x900?text=Not+Even+Real+(900x900) 900w,
                         https://via.placeholder.com/600x600?text=Giant+(600x600) 600w,
                         https://via.placeholder.com/450x450?text=Middle+(450x450) 450w,
                         https://via.placeholder.com/300x300?text=Small+(300x300) 300w,
                         https://via.placeholder.com/150x150?text=Tiny+Tiny+(150x150) 150w"
                 sizes="(max-width: 380px) calc(100vw - 5rem),
                         300px"
                 src="https://via.placeholder.com/300x300"
                 alt="">
            <figcaption>Our cool responsive image that sometimes floats and which now includes srcset and sizes attributes, to help the browser download the most sensible version of the image it can.</figcaption>
        </figure>

        <p>Similique est iste incidunt labore sit. Sit reprehenderit qui qui consectetur deserunt autem. Rerum in eum consequatur placeat reiciendis. Deleniti laboriosam rem aut voluptas omnis repellat dolor inventore. Sed quaerat consequatur consequatur quas illo vel.p Ut ex voluptates non architecto.</p>

        <p>Omnis pariatur explicabo aut odit. Eos ea a praesentium culpa nihil doloremque voluptas. Nobis sint autem suscipit vel temporibus maxime. Temporibus sunt officiis eius. Labore odio dolores debitis repellat nihil. Molestias voluptatem qui cupiditate itaque quiap rem id.</p>

        <p>Non praesentium aspernatur voluptas ut. Cumque voluptatum eveniet repellat ullam saepe sed sit. Ipsa magni labore expedita ab et voluptatem officiis. Ad deleniti quo natus voluptatem. Quam error nulla ut sed ducimus nihil iure perspiciatis. Necessitatibusp itaque fuga nihil alias distinctio beatae perferendis.</p>

        <p>Doloribus officia repudiandae corporis odit aut. Ut adipisci vero ea facilis ipsam et ut. Odio voluptas quia voluptate ea consequatur voluptatem commodi. Non omnis eum numquam distinctio commodi illo.</p>
    </div>
</section>



{{!-- Step 3 --}}

<section class="basic_text_wrapper--demo-text">
    <h2>Step 3: Changing it up with art direction</h2>
    <p>In this case, we (at least for now) dump the srcset stuff in favor of actually changing the image based on screen conditions we're interested in responding to.</p>
    <p>In this example we're changing as little as possible: we're keeping a square image, but we'd change the crop of the image. When the image is floated, in this case, we'd have more "surrounding context" in the image. When the image is centered, we'd crop in a bit more tight, onto a specific detail of the image.</p>
    <p>To me this actually feels even more straight-forward than the srcset stuff above. I'm being very explicit about what I'm telling the browser to do: if this condition is true, show this image, if this next condition is true, show this other image.</p>
</section>


<section class="code-wrapper">
    <p>Here's the HTML code.</p>

    <code><pre>
&lt;figure class="picture_element_demo__image--float-right"&gt;
    &lt;picture&gt;
        &lt;source media="(max-width: 761px)"
                srcset="https://via.placeholder.com/300x300?text=Detail+Shot"&gt;
        &lt;source media="(min-width: 762px)"
                srcset="https://via.placeholder.com/300x300?text=Context-heavy"&gt;
        &lt;img class=""
             src="https://via.placeholder.com/300x300"
             alt=""&gt;
    &lt;/picture&gt;

    &lt;figcaption&gt;Our cool responsive image that sometimes floats and which now uses a picture wrapper with source elements that dictates actual different images that should be used in specific screen-width scenarios.&lt;/figcaption&gt;
&lt;/figure&gt;
    </pre></code>

    <p>And a touch of sass:</p>
    <code>
        <pre>
.picture_element_demo__image--float-right {
  margin: auto;
  max-width: 300px;

  @media screen and (min-width: 762px) {
    float: right;
    margin: 0 0 1rem 1rem;
  }
}
        </pre>
    </code>
</section>


<section class="picture_element_demo">
    <div class="picture_element_demo__text-column">
        <p>Architecto ex dolorum vel et et porro non. Placeat libero reiciendis consequatur et. Quis illo eos saepe quaerat. Eligendi perferendis itaque cupiditate soluta repellat ut voluptatem qui.</p>

        <figure class="picture_element_demo__image--float-right">
            <picture>
                <source media="(max-width: 761px)"
                        srcset="https://via.placeholder.com/300x300?text=Detail+Shot">
                <source media="(min-width: 762px)"
                        srcset="https://via.placeholder.com/300x300?text=Context-heavy">
                <img class=""
                     src="https://via.placeholder.com/300x300"
                     alt="">
            </picture>

            <figcaption>Our cool responsive image that sometimes floats and which now uses a picture wrapper with source elements that dictates actual different images that should be used in specific screen-width scenarios.</figcaption>
        </figure>

        <p>Similique est iste incidunt labore sit. Sit reprehenderit qui qui consectetur deserunt autem. Rerum in eum consequatur placeat reiciendis. Deleniti laboriosam rem aut voluptas omnis repellat dolor inventore. Sed quaerat consequatur consequatur quas illo vel.p Ut ex voluptates non architecto.</p>

        <p>Omnis pariatur explicabo aut odit. Eos ea a praesentium culpa nihil doloremque voluptas. Nobis sint autem suscipit vel temporibus maxime. Temporibus sunt officiis eius. Labore odio dolores debitis repellat nihil. Molestias voluptatem qui cupiditate itaque quiap rem id.</p>

        <p>Non praesentium aspernatur voluptas ut. Cumque voluptatum eveniet repellat ullam saepe sed sit. Ipsa magni labore expedita ab et voluptatem officiis. Ad deleniti quo natus voluptatem. Quam error nulla ut sed ducimus nihil iure perspiciatis. Necessitatibusp itaque fuga nihil alias distinctio beatae perferendis.</p>

        <p>Doloribus officia repudiandae corporis odit aut. Ut adipisci vero ea facilis ipsam et ut. Odio voluptas quia voluptate ea consequatur voluptatem commodi. Non omnis eum numquam distinctio commodi illo.</p>
    </div>
</section>



{{!-- Step 4 --}}

<section class="basic_text_wrapper--demo-text">
    <h2>Step 4: But like actually seriously change it up with art direction, for realsies</h2>
    <p>That's a bare-bones example. What we really want to do with something like this is more like...</p>
    <ul>
        <li>Start with a full-width detail-focused image for smaller screen widths; maybe it's a square so it looks nice when in a portrait-orientation situation.</li>
        <li>Expand the image out a bit, say to a 4:3 ratio, to let in a little more context as the width of the screen expands to allow for it; but we're shortening it up a bit, vertically, so it's not overwhelmingly higher than whatever the screen height is likely to be.</li>
        <li>Flip the whole thing into a custom-cropped portrait-orientation photo that floats into the text when there's room for it to do so.</li>
    </ul>
    <p>Can we build it? Yes we can:</p>
</section>

<section class="code-wrapper">
    <p>Here's the HTML code.</p>

    <code><pre>
&lt;figure class="picture_element_demo__image--dramatic"&gt;
    &lt;picture&gt;
        &lt;source media="(max-width: 520px)"
                srcset="https://via.placeholder.com/300x300?text=1:1+Detail+Shot"&gt;
        &lt;source media="(max-width: 761px)"
                srcset="https://via.placeholder.com/400x300?text=4:3+Landscape+With+Context"&gt;
        &lt;source media="(min-width: 762px)"
                srcset="https://via.placeholder.com/300x533?text=16:9+Weird+Portrait+Crop"&gt;
        &lt;img class=""
             src="https://via.placeholder.com/300x300"
             alt=""&gt;
    &lt;/picture&gt;

    &lt;figcaption&gt;Our cool responsive image that sometimes floats and which now uses a picture wrapper with source elements that dictates actual different images that should be used in specific screen-width scenarios.&lt;/figcaption&gt;
&lt;/figure&gt;
    </pre></code>

    <p>And a touch of sass:</p>
    <code>
        <pre>
.picture_element_demo__image--dramatic {
  margin: auto;

  @media screen and (min-width: 762px) {
    float: right;
    margin: 0 0 1rem 1rem;
    max-width: 300px;
  }
}
        </pre>
    </code>
</section>


<section class="picture_element_demo">
    <div class="picture_element_demo__text-column">
        <p>Architecto ex dolorum vel et et porro non. Placeat libero reiciendis consequatur et. Quis illo eos saepe quaerat. Eligendi perferendis itaque cupiditate soluta repellat ut voluptatem qui.</p>

        <figure class="picture_element_demo__image--dramatic">
            <picture>
                <source media="(max-width: 520px)"
                        srcset="https://via.placeholder.com/300x300?text=1:1+Detail+Shot">
                <source media="(max-width: 761px)"
                        srcset="https://via.placeholder.com/400x300?text=4:3+Landscape+With+Context">
                <source media="(min-width: 762px)"
                        srcset="https://via.placeholder.com/300x533?text=16:9+Weird+Portrait+Crop">
                <img class=""
                     src="https://via.placeholder.com/300x300"
                     alt="">
            </picture>

            <figcaption>Our cool responsive image that sometimes floats and which now uses a picture wrapper with source elements that dictates actual different images that should be used in specific screen-width scenarios.</figcaption>
        </figure>

        <p>Similique est iste incidunt labore sit. Sit reprehenderit qui qui consectetur deserunt autem. Rerum in eum consequatur placeat reiciendis. Deleniti laboriosam rem aut voluptas omnis repellat dolor inventore. Sed quaerat consequatur consequatur quas illo vel.p Ut ex voluptates non architecto.</p>

        <p>Omnis pariatur explicabo aut odit. Eos ea a praesentium culpa nihil doloremque voluptas. Nobis sint autem suscipit vel temporibus maxime. Temporibus sunt officiis eius. Labore odio dolores debitis repellat nihil. Molestias voluptatem qui cupiditate itaque quiap rem id.</p>

        <p>Non praesentium aspernatur voluptas ut. Cumque voluptatum eveniet repellat ullam saepe sed sit. Ipsa magni labore expedita ab et voluptatem officiis. Ad deleniti quo natus voluptatem. Quam error nulla ut sed ducimus nihil iure perspiciatis. Necessitatibusp itaque fuga nihil alias distinctio beatae perferendis.</p>

        <p>Doloribus officia repudiandae corporis odit aut. Ut adipisci vero ea facilis ipsam et ut. Odio voluptas quia voluptate ea consequatur voluptatem commodi. Non omnis eum numquam distinctio commodi illo.</p>
    </div>
</section>



{{!-- Step 5 --}}

<section class="basic_text_wrapper--demo-text">
    <h2>Step 5: And now...combine!</h2>
    <p>Can we mash up the complex example from step 4 with the srcset'y goodness of step 2? Sure! Why not!*</p>
    <p>We're actually already on the way, as the source element is using a srcset attribute. We just need to add some more resolutions of each image, and toss in some sizes detail, and away we go.</p>
    <p>* - Probably because it gets wacky complex, thinking through the various options and having to come up with all the crops and multiresolutioned copies of the crops. Maybe this isn't something you'd want to do in an entire photo gallery kind of scenario. Or inside a CMS. But for that one striking image you want to have pop <em>just so</em>...</p>
</section>

<section class="code-wrapper">
    <p>Here's the HTML code.</p>
    <code><pre>
&lt;figure class="picture_element_demo__image--dramatic"&gt;
    &lt;picture&gt;
        &lt;source media="(max-width: 520px)"
                srcset="https://via.placeholder.com/900x900?text=1:1+Detail+Shot+(900x900) 900w,
                        https://via.placeholder.com/600x600?text=1:1+Detail+Shot+(600x600) 600w,
                        https://via.placeholder.com/450x450?text=1:1+Detail+Shot+(450x450) 450w,
                        https://via.placeholder.com/300x300?text=1:1+Detail+Shot+(300x300) 300w,
                        https://via.placeholder.com/150x150?text=1:1+Detail+Shot+(150x150) 150w"
                sizes="calc(100vw - 5rem)"&gt;
        &lt;source media="(max-width: 761px)"
                srcset="https://via.placeholder.com/200x150?text=Landscape-ish+(200x150) 200w,
                        https://via.placeholder.com/1200x900?text=Landscape-ish+(1200x900) 1200w,
                        https://via.placeholder.com/800x600?text=Landscape-ish+(800x600) 800w,
                        https://via.placeholder.com/400x300?text=Landscape-ish+(400x300) 400w"
                sizes="calc(100vw - 5rem)"&gt;
        &lt;source media="(min-width: 762px)"
                srcset="https://via.placeholder.com/300x533?text=16:9+(300x533) 300w,
                        https://via.placeholder.com/600x1066?text=16:9+(600x1066) 600w,
                        https://via.placeholder.com/900x1599?text=16:9+(900x1599) 900w,
                        https://via.placeholder.com/150x266?text=16:9+(150x266) 150w"
                sizes="300px"&gt;
        &lt;img class=""
             src="https://via.placeholder.com/300x300"
             alt=""&gt;
    &lt;/picture&gt;

    &lt;figcaption&gt;Our cool responsive image that (blah blah blah).&lt;/figcaption&gt;
&lt;/figure&gt;
    </pre></code>

    <p>And a touch of sass:</p>
    <code>
        <pre>
.picture_element_demo__image--dramatic {
  margin: auto;

  @media screen and (min-width: 762px) {
    float: right;
    margin: 0 0 1rem 1rem;
    max-width: 300px;
  }
}
        </pre>
    </code>
</section>

<section class="picture_element_demo">
    <div class="picture_element_demo__text-column">
        <p>Architecto ex dolorum vel et et porro non. Placeat libero reiciendis consequatur et. Quis illo eos saepe quaerat. Eligendi perferendis itaque cupiditate soluta repellat ut voluptatem qui.</p>

        <figure class="picture_element_demo__image--dramatic">
            <picture>
                <source media="(max-width: 520px)"
                        srcset="https://via.placeholder.com/900x900?text=1:1+Detail+Shot+(900x900) 900w,
                                https://via.placeholder.com/600x600?text=1:1+Detail+Shot+(600x600) 600w,
                                https://via.placeholder.com/450x450?text=1:1+Detail+Shot+(450x450) 450w,
                                https://via.placeholder.com/300x300?text=1:1+Detail+Shot+(300x300) 300w,
                                https://via.placeholder.com/150x150?text=1:1+Detail+Shot+(150x150) 150w"
                        sizes="calc(100vw - 5rem)">
                <source media="(max-width: 761px)"
                        srcset="https://via.placeholder.com/200x150?text=Landscape-ish+(200x150) 200w,
                                https://via.placeholder.com/1200x900?text=Landscape-ish+(1200x900) 1200w,
                                https://via.placeholder.com/800x600?text=Landscape-ish+(800x600) 800w,
                                https://via.placeholder.com/400x300?text=Landscape-ish+(400x300) 400w"
                        sizes="calc(100vw - 5rem)">
                <source media="(min-width: 762px)"
                        srcset="https://via.placeholder.com/300x533?text=16:9+(300x533) 300w,
                                https://via.placeholder.com/600x1066?text=16:9+(600x1066) 600w,
                                https://via.placeholder.com/900x1599?text=16:9+(900x1599) 900w,
                                https://via.placeholder.com/150x266?text=16:9+(150x266) 150w"
                        sizes="300px">
                <img class=""
                     src="https://via.placeholder.com/300x300"
                     alt="">
            </picture>

            <figcaption>Our cool responsive image that sometimes floats and which now uses a picture wrapper with source elements that dictates actual different images that should be used in specific screen-width scenarios. It also expands to use srcset and sizes to offer resolutions of each image to match what the browser thinks it should download. Fun.</figcaption>
        </figure>

        <p>Similique est iste incidunt labore sit. Sit reprehenderit qui qui consectetur deserunt autem. Rerum in eum consequatur placeat reiciendis. Deleniti laboriosam rem aut voluptas omnis repellat dolor inventore. Sed quaerat consequatur consequatur quas illo vel.p Ut ex voluptates non architecto.</p>

        <p>Omnis pariatur explicabo aut odit. Eos ea a praesentium culpa nihil doloremque voluptas. Nobis sint autem suscipit vel temporibus maxime. Temporibus sunt officiis eius. Labore odio dolores debitis repellat nihil. Molestias voluptatem qui cupiditate itaque quiap rem id.</p>

        <p>Non praesentium aspernatur voluptas ut. Cumque voluptatum eveniet repellat ullam saepe sed sit. Ipsa magni labore expedita ab et voluptatem officiis. Ad deleniti quo natus voluptatem. Quam error nulla ut sed ducimus nihil iure perspiciatis. Necessitatibusp itaque fuga nihil alias distinctio beatae perferendis.</p>

        <p>Doloribus officia repudiandae corporis odit aut. Ut adipisci vero ea facilis ipsam et ut. Odio voluptas quia voluptate ea consequatur voluptatem commodi. Non omnis eum numquam distinctio commodi illo.</p>

        <p>Reiciendis culpa eligendi vero. Asperiores aut et nihil aspernatur nemo et enim distinctio. Sed culpa maiores in. Voluptate voluptas suscipit unde et praesentium. Consequatur necessitatibus ex consectetur nam neque aut modi.</p>

        <p>Voluptatem est illum tempora illo. Excepturi quibusdam nemo sint nobis aut animi vero. Quis sit rerum libero.</p>

        <p>Nisi facilis officia quae. Excepturi velit et magnam iusto quis. Assumenda inventore rerum et cum cupiditate voluptas et. Nihil inventore rerum similique quibusdam. Sit dolorum omnis odio minus quaerat et veritatis.</p>

    </div>
</section>



{{!-- Step 6 --}}

<section class="basic_text_wrapper--demo-text">
    <h2>Step 6: To come: using aspect ratio media queries to make your wildest layout fantasies come true</h2>
    <p>If we want to get <em>very</em> funky, we can use aspect ratios in our media queries, to better lay out our content (and serve up properly formatted images) based on whether the user is looking at a page in landscape or portrait mode.</p>
    <p>I'm going to come back to this one later, because I know that thinking it through can cause low-grade headaches. The good news is once you do figure it out and do the original think-through, I think it gets easier to duplicate the technique on demand. Maybe. I'm not sure. I haven't had as much demand for it as I'd have originall thought or liked...</p>
</section>


{{> bottombar }}
